Учи горутины, каналы

go http server echo

По большому счету тебе не надо собирать пакеты прям по байтам. Во всех языках есть либы для простого использования. 
Посмотри примеры использования маршрутизации где используется gorilla.mux
Как выглядят обработчики пакетов. Что в кодуле делается. 

Банально можешь гуглить: 
"golang gorilla mux routing"
"golang gorilla send payload"

!!
Почитай кстати что происходит, когда вбиваешь url в строку браузера и жмякаешь Enter? Самый частый вопрос на собесах.

Кстати тебе надо щас прочитать и освоить концепцию/технологию модулей в go. 
Гугли go mod

go mod vendor
Пробовал?

Прочитал. Модули - это могут быть как самостоятельные программы с пакетом "main" на борту, так и просто библиотеки - куски кода с некой законченной функциональностью. 

Например, надо тебе уметь считать математические матрицы. Самому писать долго. Скачиваешь модуль с матрицами, смотришь readme к нему и используешь. Тебе ведь не нужна отдельная самостоятельная программа, а всего-лишь некий алгоритм, кусочек кода.

Тут можно написать:
autorizationok = log == login && pass == password
если не сталкивался, то прочитай про: &&, ||.

dataanswer лучше было обозвать dataAnswer



Сейчас следующие этапы, которые 100500% надо пройти и используются везде.
Иди по пунктам и не прыгай =)

1. Прочитай про JWT, что такое, где используется. Как прочитаешь, сделай так, чтобы в твоей проге при авторизации юзера выдавался и печатался JWT (выше которая), причем в новой строке, а не все подряд.

2. Прочитай про формат данных JSON. Сделай так, чтобы прога из пункта №1 печатала в браузер ответ в формате JSON.

3. Сделай еще 1 метод авторизации, в котором в качестве личных данных можно использовать выданный тобою же JWT.

Т.о. должно получится следующая цепь событий:
- юзаю первый метод авторизации и получаю JWT
- копирую JWT
- юзаю второй метод авторизации, используя скопированный JWT и получаю успешный ответ, если воткнул херь а не твой JWT, то вижу отказ.

⚠️И не вздумай тут костылять! Используй для JWT, JSON готовые пакеты!⚠️

<<А в порядке записи? вроде не должно быть разниц никаких, но постоянно упорно вижу примеры в которых то сверху то потом снизу. даже в тур оф го было по разному или и там и там
Долго писать (.
Сверху вниз надо. 
Гугли: golang code conventions

Теперь на очереди пункт #2. Json.
Будешь втыкать - обрати внимание на заголовок Content-Type

Про красоту - да всегда так. 
Погугли JsonFormatter online

